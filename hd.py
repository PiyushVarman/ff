import matplotlib.pyplot as plt
import tkinter as tk
from tkinter import scrolledtext,ttk,messagebox
import numpy as np
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer

from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
import tkinter
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage
root=tk.Tk()
root.title("Graph Your Grades")
root.geometry("500x500")
root.config(bg='#ffffb7')
l=[]
n=[]
m=[]
q=[]
e=[]
r=[]

def on_enter(event):
        nextexambut.config(bg='#BFBFFF')

def on_leave(event):
        nextexambut.config(bg='white')

def on_enter2(event):
        genbut.config(bg='#BFBFFF')

def on_leave2(event):
        genbut.config(bg='white')

def next():
       if combo.get().isalnum() and len(combo.get())!=0:
          l.append(combo.get())
          combo.delete(0, tk.END)
          n.append(quant_ent.get())
          m.append(quant_ent2.get())
          q.append(quant_ent3.get())
          e.append(quant_ent4.get())
          r.append(quant_ent5.get())
       else:
          messagebox.showwarning("Invalid!!","give valid exam name")
def on_select(event):
    selected_value.set(combo.get())
def kk() :
        


def gen():
      global tt
      font1 = {'family': 'serif', 'color': 'blue', 'size': 20}
      font2 = {'family': 'serif', 'color': 'darkred', 'size': 15}
      plt.title("Mark Analysis", fontdict=font1)
      xpoints = np.array(n)
      ypoints = np.array(l)
      plt.xlabel("Exams", fontdict=font2)
      plt.plot(ypoints, xpoints, 'o-r')
      plt.ylabel('Marks', fontdict=font2)

      x2points = np.array(m)
      plt.plot(ypoints, x2points, 'o-b')

      x3points = np.array(q)
      plt.plot(ypoints, x3points, 'o-g')
      x4=np.array(e)
      x5=np.array(r)
      plt.plot(ypoints,x4,'o-y')
      plt.plot(ypoints,x5,'o-c')
      plt.legend(['maths', 'physics', 'chemistry','english','maths'])
      plt.show()
      total=tk.Label(root,text='AVERAGE',bg='#ffffb7',bd=2,font=('times',13,'bold'))
      total.place(x=50,y=290)
      a1=tk.Label(root,text=f"Average in maths : {round(sum(n)/len(n),2)}",font=('times',13),bg='#ffffb7')
      a1.place(x=15,y=320)
      a2=tk.Label(root,text=f"Average in physics : {round(sum(m)/len(m),2)}",font=('times',13),bg='#ffffb7')
      a2.place(x=15,y=350)
      a3=tk.Label(root,text=f"Average in chem : {round(sum(q)/len(q),2)}",font=('times',13),bg='#ffffb7')
      a3.place(x=15,y=380)
      a4=tk.Label(root,text=f"Average in english : {round(sum(e)/len(e),2)}",font=('times',13),bg='#ffffb7')
      a4.place(x=15,y=410)
      a5=tk.Label(root,text=f"Average in elective : {round(sum(r)/len(r),2)}",font=('times',13),bg='#ffffb7')
      a5.place(x=15,y=440)
      a6=scrolledtext.ScrolledText(root,bg='#ffffb7',font=('times',13),bd=0,borderwidth=0)
      a6.place(y=315,x=280)
      total=tk.Label(root,text='TOTAL',bg='#ffffb7',bd=2,font=('times',13,'bold'))
      total.place(x=300,y=290)
      for i in range(len(n)) :
          var1=n[i]+m[i]+q[i]+e[i]+r[i]
          a6.insert(tk.INSERT,f'Total in {l[i]}={var1}/500\n')
          print(l[i],var1)
      tt=tk.Button(root,text="TIME TABLE",relief='ridge',bd=2,font=('times'),command=kk)
      tt.place(x=370,y=450)
exam=tk.Label(root,text="EXAM NAME",font=('times',13),bg='#ffffb7',borderwidth=1)
exam.place(x=15,y=15)
maths=tk.Label(root,text='MATHS',font=('times',13),bg='#ffffb7')
maths.place(x=50,y=60)
phy=tk.Label(root,text='PHYSICS',font=('times',13),bg='#ffffb7')
phy.place(x=208,y=60)
che=tk.Label(root,text='CHEMISTRY',font=('times',13),bg='#ffffb7')
che.place(x=352,y=60)
en=tk.Label(root,text='ENGLISH',font=('times',13),bg='#ffffb7')
en.place(x=105,y=135)
ele=tk.Label(root,text='ELECTIVE',font=('times',13),bg='#ffffb7')
ele.place(x=272,y=135)
var=10
var2=11
var3=12
var4=13
var5=14
entry = ttk.Entry(root,width= 7,textvariable=var)
entry.place(x=20,y=120)
entry2 = ttk.Entry(root,width= 7,textvariable=var2)
entry2.place(x=180,y=120)
entry3 = ttk.Entry(root,width= 7,textvariable=var3)
entry3.place(x=340,y=120)
entry4 = ttk.Entry(root,width= 7,textvariable=var4)
entry4.place(x=80,y=196)
entry5 = ttk.Entry(root,width= 7,textvariable=var5)
entry5.place(x=249,y=196)
quant_ent=tk.Scale(root,from_=1,to=100,variable=var,orient='horizontal',bg='#BFBFFF',width=10,length=123,troughcolor='#FFD9AB')
quant_ent.place(x=18,y=85)

quant_ent2=tk.Scale(root,from_=1,to=100,variable=var2,orient='horizontal',bg='#BFBFFF',width=10,length=123,troughcolor='#FFD9AB')
quant_ent2.place(x=178,y=85)

quant_ent3=tk.Scale(root,from_=1,to=100,variable=var3,orient='horizontal',bg='#BFBFFF',width=10,length=123,troughcolor='#FFD9AB')
quant_ent3.place(x=338,y=85)

quant_ent4=tk.Scale(root,from_=1,to=100,variable=var4,orient='horizontal',bg='#BFBFFF',width=10,length=123,troughcolor='#FFD9AB')
quant_ent4.place(x=78,y=160)

quant_ent5=tk.Scale(root,from_=1,to=100,orient='horizontal',variable=var5,bg='#BFBFFF',width=10,length=123,troughcolor='#FFD9AB')
quant_ent5.place(x=248,y=160)

nextexambut=tk.Button(root,text="SAVE EXAM",relief='ridge',bd=2,font=('times'),command=next)
nextexambut.place(x=10,y=250)
genbut=tk.Button(root,text="ANALYSIS",relief='ridge',bd=2,font=('times'),command=gen)
genbut.place(x=340,y=250)
nextexambut.bind('<Enter>', on_enter)
nextexambut.bind('<Leave>', on_leave)
genbut.bind('<Enter>', on_enter2)
genbut.bind('<Leave>', on_leave2)
selected_value = tk.StringVar()

# Create a Combobox
combo = ttk.Combobox(root, textvariable=selected_value)
combo['values'] = ("Quarterly", "HalfYearly", "Midterm","Annual","RevisionTest")
combo.place(x=125,y=17)
combo.bind("<<ComboboxSelected>>", on_select)
combo.set("Select an option")
root.mainloop()
